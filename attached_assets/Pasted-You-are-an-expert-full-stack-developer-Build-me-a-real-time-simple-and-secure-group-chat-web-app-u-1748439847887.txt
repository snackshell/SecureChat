You are an expert full-stack developer. Build me a real-time, simple and secure group chat web app using Supabase and Vercel.**
> This is for a private group of classmates, and I need these features:
>
> ### âœ… Features:
>
> 1. **Authentication**
>
> * Users enter a **username** and a **shared group password**: `2025` to enter the group chat.
>
> * Admin login: username `adu`, password `1995`
>
> * Store user sessions (can be stored in `localStorage` or Supabase auth)
>
> 2. **Group Chat Interface**
>
> * Show all messages to everyone in real time.
>
> * Display sender name, time, and content (text or image).
>
> * Include input for sending messages + an option to upload an image.
>
> * Store all messages in Supabase DB (PostgreSQL)
>
> * Realtime sync using Supabaseâ€™s `realtime` API.
>
> 3. **Direct Messaging**
>
> * Sidebar with all usernames.
>
> * Clicking a username opens a **private chat window** (DM) beside group chat.
>
> * DM messages stored separately in Supabase.
>
> 4. **Image Upload**
>
> * Users can upload images using Supabase Storage.
>
> * Display them inline in the chat when posted.
>
> 5. **Data structure**
>
> * Table: `group_messages`
>
>   * `id`, `sender`, `content`, `image_url`, `timestamp`
>
> * Table: `direct_messages`
>
>   * `id`, `from_user`, `to_user`, `content`, `image_url`, `timestamp`
>
> * Bucket: `chat-images/` (for image uploads)
>
> 6. **Hosting**
>
> * Frontend: deploy on **Vercel**
>
> * Backend: use **Supabase** (free tier is enough)
>
> * No backend server code needed if using Supabase for auth, storage, and DB
>
> 7. **Security**
>
> * Prevent access without valid login
>
> * Admins should be visually distinct in UI (e.g., red border or badge)
>
> * Secure file uploads and DB write permissions using Supabase policies
>
> 8. **UI/UX**
>
> * Minimal clean UI
> * Mobile-friendly layout
> * Clearly show who is online or recently active
>
> ### ðŸ“¦ Deliverables
>
> * React (or Vanilla HTML/JS) frontend app
> * Supabase project with schema + auth rules
> * Deploy-ready Vercel config
> * `README.md` with setup instructions for cloning, environment variables, etc.